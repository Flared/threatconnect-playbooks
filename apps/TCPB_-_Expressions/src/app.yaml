app:
  allowOnDemand: true
  appId: 24a7eda9-f279-5671-b0f6-26b0f7f01a6d
  appName: TCPB_-_Expressions
  displayName: Expressions
  features:
  - aotExecutionEnabled
  - appBuilderCompliant
  - fileParams
  - secureParams
  - layoutEnabledApp
  languageVersion: '3.6'
  listDelimiter: '|'
  note: 'This application parses expressions and returns expression results.  The
    expression

    grammar is similar to Python, but not exactly identical.  See ebnf-syntax below
    for the

    complete extended Bachus Naur format of the grammar.  Some notable differences
    from

    Python syntax are no methods on objects or variables, no list comprehensions.


    Constants are case-insensitive, although any variables defined from loops are

    case sensitive, as are attributes or dictionary keys.


    ThreatConnect variables (e.g. `#App:1234:variable!String`) are evaluated on resolution

    to determine if they are valid expressions, and the expression result is used

    if they are.  If a variable is a string, it will be coerced to a float or an integer

    on demand by most functions that expect float or integer arguments.  Note that
    JSON

    data is expression grammar compatible, so an expression like

    `#App:1234:json_object!String.field` is valid so long as `json_object` is a JSON

    dictionary.

    '
  notes:
    Evaluate: A direct evaluation of an expression with either single or multiple results.
    Evaluate Many With Loop: "Perform multiple evaluations, one set to define variables, another to define outputs.
      Loop variables with the same number of elements will be incremented concurrently,
      otherwise variables are incremented from shortest number of elements to largest.

      Example: If `a` is `(1,2,3)` and `b` is `(1,2,3)` and `c` is `(1,2)`, a loop expression
      `(a,b,c)` will yield `[(1,1,1), (1,1,2), (2,2,1), (2,2,2), (3,3,1), (3,3,2)]`.

      Loop expressions which result in lists i.e. [1, 2, 3] are used to extend the output, rather than create

      nested outputs.  Tuple outputs will create nested outputs.
      "
    Evaluate in Loop: "Loop evaluation of the same expression while looping over the inputs. Inputs with
      the same length are incremented in parallel.  The order of loop increments is shortest
      to longest.  A Loop expression which results in a list i.e [1, 2, 3] is used to extend the output
      rather than create nested output.  Tuple outputs will create nested output."
    Evaluate Many: Perform multiple evaluations, one set to define variables, another to define outputs.
    _TRAILER_:
      -
      - file://./METHODS.md
      - file://./SYNTAX.md

  playbookType: Utility
  programLanguage: PYTHON
  programMain: run
  programVersion: 1.0.7
  releaseNotes:
    1.0.0 (2020-06-15):
    - Initial Release
    1.0.1 (2020-09-23):
    - Add csvread, csvwrite, md5, sha1, sha256, spamsum, spamdist
    1.0.2 (2020-09-23):
    - Add urlre, refindall, urlparse, urlparse_qs
    1.0.3 (2020-09-24):
    - Add spammatch function
    - Add Return None on failure option
    - Add ensure_ascii=False to json.dump to allow UTF-8 in values
    - Add unique function
    1.0.4 (2020-09-25):
    - Improve error handling by showing args to failing function
    - Renamed spammatch to fuzzymatch
    - Renamed spamdist to fuzzydist
    - Renamed spamsum to fuzzyhash
    1.0.5 (2020-10-01):
    - Converted to app.yaml
    - added unnest function
    1.0.6 (2021-04-09):
    - Allow additional input types
    - Add transform output types
    - Add prune, structure, update, functions
    - Add _ + iter_outputs to be the prior iteration result
    - Allow tuple list outputs to nest
    1.0.7 (2021-04-20):
    - Fix list expressions with only one element to return list
    - Add rexxparse function
    - Fix format function to allow dot notation
  retry:
    allowed: false
    defaultDelayMinutes: 1
    defaultMaxRetries: 1
    disabled: true
  runtimeLevel: Playbook
inputGroups:
- group: Action
  inputs:
  - display: null
    label: Action
    name: tc_action
    note: The action to take
    required: true
    type: Choice
    validValues:
    - Evaluate
    - Evaluate Many
    - Evaluate in Loop
    - Evaluate Many With Loop
- group: Configure
  inputs:
  - display: tc_action in ('Evaluate')
    label: Expression
    note: 'The expression to evaluate.  If the expression is a list,

      e.g. ("foo", 1, 5.0) the output will be a StringArray.'
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray
    required: true
  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: Variables
    note: 'Variables to be defined for the expressions to reference.  Defined variables
      are

      not output.  Variables are evaluated in the order they are entered.'
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray
    type: KeyValueList
  - display: tc_action in ('Evaluate Many With Loop', 'Evaluate in Loop')
    label: Loop Variables
    note: 'Add a name and a value for each variable to loop over.   Loop variables
      with

      the same number of elements will be incremented concurrently, variables with

      different number of elements will be nested from longest to shortest.'
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray
    required: true
    type: KeyValueList
  - display: tc_action in ('Evaluate Many With Loop')
    exposePlaybookKeyAs: StringArray
    label: Loop Expressions
    note: 'Loop outputs and loop output expressions for each output.  These may reference
      defined variables

      but may not refer to other loop variables or outputs, with the exception that

      the prior loop iteration variables are available with a leading underscore,

      and are None on the first iteration.'
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray
    required: true
    type: KeyValueList
  - display: tc_action in ('Evaluate Many With Loop')
    exposePlaybookKeyAs: String
    label: Additional Outputs
    note: 'Outputs and output expressions for each output.  These may reference defined

      variables and loop outputs, but may not refer to outputs not yet evaluated.

      Outputs will be generated as a single output only, with list outputs being converted
      to

      JSON strings.'
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray
    type: KeyValueList
  - display: tc_action in ('Evaluate in Loop')
    label: Expression
    name: loop_expression
    note: 'The expression to evaluate.  If the expression generates a list result,

      each element of the step-wise evaluation will be appended to the final result.

      The prior iteration may be referred to using the name `_output` and will be

      None on the first iteration.'
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray
    required: true
  - display: tc_action in ('Evaluate Many')
    exposePlaybookKeyAs: String
    label: Outputs
    note: 'Outputs and output expressions for each output.  These may reference defined
      variables

      but may not refer to outputs not yet evaluated.  Outputs will be generated as
      a

      single output only, with list outputs being converted to JSON strings.'
    required: false
    type: KeyValueList
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray
- group: Advanced
  inputs:
  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: Binary Outputs
    type: KeyValueList
    note: Outputs to be delivered as Binary
    exposePlaybookKeyAs: Binary
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: Binary Array Outputs
    type: KeyValueList
    note: Outputs to be delivered as BinaryArray
    exposePlaybookKeyAs: BinaryArray
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: KeyValue Outputs
    name: kv_outputs
    type: KeyValueList
    note: Outputs to be delivered as KeyValue
    exposePlaybookKeyAs: KeyValue
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: KeyValue Array Outputs
    name: kv_array_outputs
    type: KeyValueList
    note: Outputs to be delivered as KeyValueArray
    exposePlaybookKeyAs: KeyValueArray
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: TCEntity Outputs
    name: tce_outputs
    type: KeyValueList
    note: Outputs to be delivered as TCEntity.
    exposePlaybookKeyAs: TCEntity
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: TCEntity Array Outputs
    name: tce_array_outputs
    type: KeyValueList
    note: Outputs to be delivered as TCEntityArray.
    exposePlaybookKeyAs: TCEntityArray
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    label: TCEnhancedEntity Outputs
    name: tcee_outputs
    type: KeyValueList
    note: Outputs to be delivered as TCEnhancedEntity.
    exposePlaybookKeyAs: TCEnhancedEntity
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - display: tc_action in ('Evaluate Many', 'Evaluate Many With Loop')
    disabled: true
    label: TCEnhancedEntity Array Outputs
    name: tcee_array_outputs
    type: KeyValueList
    note: Outputs to be delivered as TCEnhancedEntityArray.
    exposePlaybookKeyAs: TCEnhancedEntityArray
    playbookDataType:
    - String
    - StringArray
    - Binary
    - BinaryArray
    - KeyValue
    - KeyValueArray
    - TCEntity
    - TCEntityArray
    - TCEnhancedEntity
    - TCEnhancedEntityArray

  - default: true
    display: null
    label: Return None on failure
    note: 'When an expression fails to evaluate, assign it the value None, and continue

      execution.'
    type: Boolean
  - default: true
    disabled: true
    label: Fail on No Results
    note: If an action would return an empty result, exit with a failure.
    type: Boolean
  - default: true
    disabled: true
    label: Fail on False
    note: Fail if any output value would be False or Null
    type: Boolean
  - default: true
    disabled: true
    label: Continue on Failed Operation
    note: If an action contains multiple steps, and one step fails, continue execution
      without halting.
    type: Boolean
  - default: true
    disabled: true
    label: Verify SSL Cert
    note: Verify the SSL Certificate of the API host during connection.
    type: Boolean
outputGroups:
  tc_action in ('Evaluate', 'Evaluate in Loop'):
    String:
    - expression.expression
    - expression.result.0
    StringArray:
    - expression.result.array
  tc_action not in (''):
    String:
    - expression.action
    StringArray:
    - expression.errors
